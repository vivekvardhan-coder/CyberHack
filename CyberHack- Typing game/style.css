:root {
    --primary: #00ff8c;
    --secondary: #0077ff;
    --dark: #111827;
    --darker: #0f1420;
    --light: #f3f4f6;
    --error: #ff3860;
    --success: #00d1b2;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Courier New', monospace;
}

body {
    background-color: var(--darker);
    color: var(--light);
    height: 100vh;
    overflow: auto; /* Changed from hidden to auto to allow scrolling */
    perspective: 1000px;
}

.particle {
    position: absolute;
    background: var(--primary);
    border-radius: 50%;
    opacity: 0.7;
    pointer-events: none;
    z-index: -1;
    animation: float 20s infinite ease-in-out;
}

@keyframes float {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-20px);
    }
}

.container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 20px;
    height: 100%;
    display: flex;
    flex-direction: column;
    position: relative;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 0;
    margin-bottom: 20px;
    border-bottom: 2px solid var(--primary);
    position: relative;
    z-index: 10;
}

.logo {
    font-size: 24px;
    font-weight: bold;
    color: var(--primary);
    text-shadow: 0 0 10px rgba(0, 255, 140, 0.7);
    letter-spacing: 2px;
}

.logo span {
    color: var(--secondary);
}

.stats {
    display: flex;
    gap: 20px;
}

.stat {
    text-align: center;
}

.stat-value {
    font-size: 24px;
    font-weight: bold;
    color: var(--primary);
}

.stat-label {
    font-size: 12px;
    color: var(--light);
    opacity: 0.8;
}

main {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
}

.game-screen {
    perspective: 1000px;
    width: 100%;
    max-width: 800px;
    position: relative;
    transform-style: preserve-3d;
}

.terminal {
    background-color: rgba(17, 24, 39, 0.85);
    border: 2px solid var(--primary);
    border-radius: 10px;
    padding: 30px;
    box-shadow: 0 0 20px rgba(0, 255, 140, 0.3),
                0 0 40px rgba(0, 119, 255, 0.1);
    transform-style: preserve-3d;
    position: relative;
    overflow: auto; /* Changed from hidden to auto to allow scrolling */
    max-height: 600px; /* Added max height to limit terminal height */
    padding-bottom: 50px; /* Added padding to prevent scroll hitting stats bar */
}

.terminal:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 30px;
    background: linear-gradient(to right, var(--primary), var(--secondary));
    opacity: 0.3;
    border-radius: 8px 8px 0 0;
}

.terminal-header {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 30px;
    display: flex;
    align-items: center;
    padding: 0 10px;
}

.terminal-btn {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin-right: 6px;
}

.terminal-btn:nth-child(1) {
    background-color: #ff5f56;
}

.terminal-btn:nth-child(2) {
    background-color: #ffbd2e;
}

.terminal-btn:nth-child(3) {
    background-color: #27c93f;
}

.terminal-title {
    margin-left: 10px;
    font-size: 12px;
    color: var(--light);
    opacity: 0.7;
}

.mission-prompt {
    margin-bottom: 20px;
    font-size: 18px;
    color: #0077ff;
}

html, body {
    height: 100%;
    overflow: hidden; /* Prevent unwanted scroll */
    overscroll-behavior: none;
    background-color: var(--darker);
    color: var(--light);
}

.text-container {
    position: relative;
    height: 300px; /* Set a consistent height */
    overflow-y: auto;
    padding: 20px;
    border-radius: 8px;
    background-color: rgba(17, 24, 39, 0.8);
    scroll-behavior: smooth;
    border: 2px solid var(--primary);
    box-shadow: 0 0 15px rgba(0, 255, 140, 0.2);
    margin-bottom: 20px;
}

.text-display {
    white-space: pre-wrap;
    word-wrap: break-word;
    overflow: visible !important;
    max-height: unset !important;
    padding: 0;
    margin: 0;
    font-size: 18px;
    line-height: 1.5;
}

.text-display pre {
    margin: 0;
    white-space: pre-wrap;
    line-height: 1.5;
    font-size: 18px;
    color: var(--light);
}

.text-display span.current {
    border-left: 2px solid var(--primary);
    animation: blink 1s infinite;
}

.text-display span.correct {
    color: var(--primary);
    text-shadow: 0 0 5px rgba(0, 255, 140, 0.5);
}

.text-display span.incorrect {
    color: var(--error);
    text-decoration: underline;
    text-shadow: 0 0 5px rgba(255, 56, 96, 0.5);
}

.text-input {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    opacity: 0;
    pointer-events: none;
    z-index: -1;
}

#username-input {
    width: 100%;
    padding: 12px;
    margin: 20px 0;
    background: transparent;
    border: 2px solid var(--primary);
    border-radius: 5px;
    color: var(--light);
    font-size: 18px;
    text-align: center;
}

#username-input:focus {
    outline: none;
    box-shadow: 0 0 10px rgba(0, 255, 140, 0.5);
}

/* Hacking success animation */
.hack-success {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.5s ease;
}

.hack-success.active {
    opacity: 1;
    pointer-events: auto;
}

.hack-message {
    font-size: 36px;
    color: var(--primary);
    text-align: center;
    margin-bottom: 30px;
    text-shadow: 0 0 10px rgba(0, 255, 140, 0.7);
}

.hack-progress {
    width: 80%;
    max-width: 400px;
    height: 10px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 5px;
    overflow: hidden;
    margin-bottom: 20px;
}

.hack-progress-bar {
    height: 100%;
    width: 0%;
    background: linear-gradient(to right, var(--primary), var(--secondary));
    transition: width 0.3s ease;
}

.code-stream {
    font-family: 'Courier New', monospace;
    color: var(--primary);
    height: 200px;
    width: 90%;
    max-width: 600px;
    overflow: hidden;
    border: 1px solid var(--primary);
    padding: 10px;
    background-color: rgba(0, 0, 0, 0.5);
    line-height: 1.5;
}

.combo-meter {
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    height: 200px;
    width: 30px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 15px;
    overflow: hidden;
}

.combo-fill {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 0%;
    background: linear-gradient(to top, var(--primary), var(--secondary));
    transition: height 0.3s ease;
}

.combo-value {
    position: absolute;
    width: 100%;
    text-align: center;
    top: -30px;
    font-size: 18px;
    font-weight: bold;
    color: var(--primary);
}

.feedback {
    margin-top: 20px;
    height: 30px;
    text-align: center;
    font-size: 20px;
    color: var(--primary);
    opacity: 0;
    transition: opacity 0.3s ease;
}

.feedback.active {
    opacity: 1;
}

.controls {
    display: flex;
    gap: 10px;
    margin-top: 30px;
}

.btn {
    padding: 10px 20px;
    background: transparent;
    color: var(--primary);
    border: 2px solid var(--primary);
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 0%;
    height: 100%;
    background: rgba(0, 255, 140, 0.2);
    transition: width 0.3s ease;
    z-index: -1;
}

.btn:hover::before {
    width: 100%;
}

.btn:hover {
    box-shadow: 0 0 10px rgba(0, 255, 140, 0.5);
}

.game-over {
    display: none;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.game-over h2 {
    font-size: 36px;
    color: var(--primary);
    margin-bottom: 20px;
}

.results {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: center;
    margin-bottom: 30px;
}

.result-box {
    background: rgba(17, 24, 39, 0.8);
    border: 1px solid var(--primary);
    padding: 15px;
    border-radius: 5px;
    width: 150px;
}

.result-value {
    font-size: 28px;
    color: var(--primary);
    margin-bottom: 5px;
}

.result-label {
    font-size: 14px;
    opacity: 0.8;
}

.progress-chart {
    width: 100%;
    height: 200px;
    margin-bottom: 20px;
    position: relative;
}

.chart-bar {
    position: absolute;
    bottom: 0;
    width: 40px;
    background: linear-gradient(to top, var(--primary), var(--secondary));
    border-radius: 5px 5px 0 0;
    transition: height 1s ease;
}

.chart-label {
    position: absolute;
    bottom: -25px;
    width: 40px;
    text-align: center;
    font-size: 12px;
}

.modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(15, 20, 32, 0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
}

.modal.active {
    opacity: 1;
    pointer-events: auto;
}

.modal-content {
    background-color: var(--dark);
    border: 2px solid var(--primary);
    border-radius: 10px;
    padding: 30px;
    width: 90%;
    max-width: 600px;
    text-align: center;
    position: relative;
    box-shadow: 0 0 30px rgba(0, 255, 140, 0.3);
    transform: translateY(50px);
    opacity: 0;
    transition: all 0.5s ease;
}

.modal.active .modal-content {
    transform: translateY(0);
    opacity: 1;
}

.modal h2 {
    color: var(--primary);
    margin-bottom: 20px;
    font-size: 28px;
}

.modal p {
    margin-bottom: 15px;
    line-height: 1.6;
}

.close-modal {
    position: absolute;
    top: 15px;
    right: 15px;
    font-size: 24px;
    color: var(--light);
    background: none;
    border: none;
    cursor: pointer;
    opacity: 0.7;
    transition: opacity 0.3s ease;
}

.close-modal:hover {
    opacity: 1;
}

.select-container {
    margin-bottom: 20px;
}

.select-wrapper {
    position: relative;
    display: inline-block;
    margin: 0 10px;
}

.select-wrapper::after {
    content: '▼';
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--primary);
    pointer-events: none;
    font-size: 12px;
}

select {
    appearance: none;
    background-color: transparent;
    color: var(--light);
    border: 1px solid var(--primary);
    padding: 8px 30px 8px 10px;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
}

select:focus {
    outline: none;
    box-shadow: 0 0 5px rgba(0, 255, 140, 0.7);
}

option {
    background-color: var(--dark);
}

.leaderboard {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

.leaderboard th,
.leaderboard td {
    padding: 10px;
    text-align: center;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.leaderboard th {
    background-color: rgba(0, 255, 140, 0.1);
    color: var(--primary);
}

.leaderboard tr:nth-child(even) {
    background-color: rgba(255, 255, 255, 0.03);
}

.leaderboard tr:hover {
    background-color: rgba(0, 255, 140, 0.1);
}

.tip-box {
    background: rgba(0, 119, 255, 0.1);
    border-left: 3px solid var(--secondary);
    padding: 15px;
    margin: 20px 0;
    font-style: italic;
}

@keyframes hackSuccess {
    0% {
        transform: scale(0.8);
        opacity: 0;
    }
    50% {
        transform: scale(1.1);
        opacity: 1;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

.mission-passed {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 48px;
    color: var(--primary);
    text-shadow: 0 0 20px rgba(0, 255, 140, 0.8);
    z-index: 1000;
    animation: hackSuccess 1.5s ease-out;
    display: none;
}

/* Add new animations */
@keyframes glitch {
    0% { transform: translate(0); }
    20% { transform: translate(-2px, 2px); }
    40% { transform: translate(-2px, -2px); }
    60% { transform: translate(2px, 2px); }
    80% { transform: translate(2px, -2px); }
    100% { transform: translate(0); }
}

@keyframes matrix {
    0% { transform: translateY(-100%); }
    100% { transform: translateY(100%); }
}

.mission-passed {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 2.5em;
    color: var(--primary);
    text-shadow: 0 0 20px rgba(0, 255, 140, 0.8);
    animation: hackSuccess 1.5s ease-out;
    z-index: 1000;
}

.matrix-effect {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
    background: repeating-linear-gradient(
        0deg,
        rgba(0, 255, 140, 0.1) 0px,
        rgba(0, 255, 140, 0.1) 1px,
        transparent 1px,
        transparent 2px
    );
    animation: matrix 20s linear infinite;
}

.glitch-effect {
    animation: glitch 0.2s infinite;
    position: relative;
}

/* Add screen shake for errors */
.shake {
    animation: shake 0.5s;
}

@keyframes shake {
    0% { transform: translate(1px, 1px) rotate(0deg); }
    10% { transform: translate(-1px, -2px) rotate(-1deg); }
    20% { transform: translate(-3px, 0px) rotate(1deg); }
    30% { transform: translate(3px, 2px) rotate(0deg); }
    40% { transform: translate(1px, -1px) rotate(1deg); }
    50% { transform: translate(-1px, 2px) rotate(-1deg); }
    60% { transform: translate(-3px, 1px) rotate(0deg); }
    70% { transform: translate(3px, 1px) rotate(-1deg); }
    80% { transform: translate(-1px, -1px) rotate(1deg); }
    90% { transform: translate(1px, 2px) rotate(0deg); }
    100% { transform: translate(1px, -2px) rotate(-1deg); }
}
